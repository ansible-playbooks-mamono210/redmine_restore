---
driver:
  name: ec2
platforms:
  - name: ${PLATFORM_NAME}
    ansible_user: centos
    image_name: "redmica_golden-image_centos-stream8-1*"
    image_owner: ${AMI_OWNER_ID}
    instance_type: t3a.medium
    keypair_name: ${KEYPAIR_NAME}
    security_group_name: ${SECURITY_GROUP_NAME}
    security_group_rules:
      - proto: tcp
        from_port: "{{ ssh_port }}"
        to_port: "{{ ssh_port }}"
        cidr_ip: '0.0.0.0/0'
      - proto: icmp
        from_port: 8
        to_port: -1
        cidr_ip: '0.0.0.0/0'
    security_group_rules_egress:
      - proto: -1
        from_port: 0
        to_port: 0
        cidr_ip: '0.0.0.0/0'
    ssh_port: 22
    ssh_user: centos
    tag_name: ${TAG_NAME}
    tag_created_by: ${CREATED_BY}
    volume_size: 20
    vpc_subnet_id: ${VPC_SUBNET_ID}
provisioner:
  name: ansible
  config_options:
    defaults:
      callbacks_enabled: ansible.posix.profile_tasks
  connection_options:
    ansible_user: centos
    local_file_name: ${AWS_S3_OBJECT_NAME}
    remote_directory: /tmp/s3
    remote_file_name: ${AWS_S3_OBJECT_NAME}
    s3_bucket: ${AWS_S3_BUCKET_NAME}
    s3_object_name: ${AWS_S3_OBJECT_NAME}
    working_dir: "{{ remote_directory }}"
  log: true
  playbooks:
    converge: ../../restore.yml
verifier:
  name: ansible
scenario:
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - cleanup
    - destroy
